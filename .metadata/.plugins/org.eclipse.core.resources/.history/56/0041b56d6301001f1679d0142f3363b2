/*
 * app.cpp
 *
 *  Created on: Mar 1, 2024
 *      Author: jgonz
 */

#include <app.h>
#include <gpsGNSS.h>
#include <loraApp.h>
#include <loraTcp.h>
#include <loraLink.h>
#include "fifoUart.h"

///////////////
// SUPERLOOP //
///////////////

extern uint8_t superloop;

/////////////////
// APP CONTENT //
/////////////////

uint8_t stateContent;				// Estado de maquina de Contenido
uint8_t count_0_gps;				// Contador de la ME para gps
uint8_t count_1_data;				// Contador de la ME contenido

extern loraDecision loraDecision;	// Objeto de toma de decisiones Lora
extern fifoCommands fifoContent;	// Fifo de comandos

bool savedData;						// Indica que hay datos guardados en fifo
bool bussyRN2903;					// Indica que RN2903 est치 ocupado

extern bool flagGpsSaved;			// Indica que los datos de Gps se guardaron
extern bool flagSetData;			// Indica que reloj TCP de datos de sensores caduc칩
extern bool flagSetGps;				// Indica que reloj TCP de GPS caduc칩
extern bool flagSetSys;				// Indica que reloj TCP de datos de sistema caduc칩

uint8_t content[9];					// Bus para contenido de datos
uint8_t content2[9];				// Bus para contenido de datos 2

uint8_t b1_HCL	= 100;				// Valor de HCL sensor B1
uint8_t a1_HCL;						// Valor de HCL sensor A1

extern uint16_t tempApp;			// Temperatura a enviar
extern uint16_t humApp;				// Humedad a enviar

extern float latitud;				// Latitud captada
extern float longitud;				// Longitud captada

float latitudSend;										// Latitud a enviar
float longitudSend;										// Longitud a enviar

uint8_t *ptrFloat_Lat = (uint8_t *) &latitudSend;		// Puntero al primer byte del flotante latitud
uint8_t *ptrFloat_Lon = (uint8_t *) &longitudSend;		// Puntero al primer byte del flotante longitud


extern int batScaled;									// Valor bateria escalado
extern bool errorHardware[8];							// Errores de hardware
extern bool warningHardware[8];							// Warnings de hardware
uint8_t errorHw;										// Compresion de errores
uint8_t warnings;										// Compresion de warnings

extern uint8_t qttyMessagesInputs;
extern uint8_t qttyMessagesInputs2;

uint8_t qttyMsgData;
uint8_t qttyMsgGps;
uint8_t qttyMsgSys;

//////////////
// APP LORA //
//////////////

uint8_t stateLoraApp = 6;

extern loraSelect loraSelect;
extern loraCheck loraCheck;

rn2903Command *txCommandPointer;

extern loraRutine setupRN2903;
extern loraRutine chSetRN2903;
extern loraRutine loopRN2903;

int countLoraApp;
int limitLoraApp = 5000/superloop;


extern uint8_t macSetCh10_RN2903[];
uint8_t countChSet;


/////////
// APP //
/////////

void app(){

}
